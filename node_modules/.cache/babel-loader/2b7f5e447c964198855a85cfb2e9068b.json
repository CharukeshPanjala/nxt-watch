{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/VideoItemDetailsRoute/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport ReactPlayer from 'react-player';\nimport Loader from 'react-loader-spinner';\nimport { BsDot } from 'react-icons/bs';\nimport { AiOutlineLike, AiOutlineDislike } from 'react-icons/ai';\nimport { MdPlaylistAdd } from 'react-icons/md';\nimport Header from '../Header';\nimport Navbar from '../Navbar';\nimport { VideoFrameContainer, VideoContainer, ParaEl, AttributesContainer, ChannelContainer, ImageEl, ContentContainer, IconParas, Cont, LoaderContainer, FailureContainer, FailureImage, FailureHeading, FailureDescription, FailureRetryButton } from './styledComponents';\nimport ThemeContext from '../../context/ThemeContext';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass VideoItemDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoDetails: {},\n      liked: false,\n      disliked: false,\n      saved: false,\n      status: 'loading'\n    };\n\n    this.getData = async () => {\n      this.mounted = true;\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const {\n        id\n      } = params;\n      const jwtToken = Cookies.get('jwt_token');\n      const url = `https://apis.ccbp.in/videos/${id}`;\n      const options = {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        },\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n\n      if (response.ok) {\n        this.setState({\n          videoDetails: data.video_details,\n          status: 'success'\n        }, this.renderHome);\n        {\n          ;\n\n          /*#__PURE__*/\n          _jsxDEV(ThemeContext.Consumer, {\n            children: value => {\n              const {\n                savedVideos\n              } = value;\n              return null;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 10\n          }, this);\n        }\n      } else {\n        this.setState({\n          status: 'failure'\n        }, this.renderHome);\n      }\n    };\n\n    this.isDisliked = () => {\n      const {\n        liked,\n        disliked\n      } = this.state;\n\n      if (liked) {\n        this.setState({\n          liked: false\n        });\n      }\n\n      if (disliked) {\n        this.setState({\n          disliked: false\n        });\n      } else {\n        this.setState({\n          disliked: true\n        });\n      }\n    };\n\n    this.isLiked = () => {\n      const {\n        liked,\n        disliked\n      } = this.state;\n\n      if (disliked) {\n        this.setState({\n          disliked: false\n        });\n      }\n\n      if (liked) {\n        this.setState({\n          liked: false\n        });\n      } else {\n        this.setState({\n          liked: true\n        });\n      }\n    };\n\n    this.renderVideo = () => {\n      const {\n        videoDetails,\n        liked,\n        disliked,\n        saved\n      } = this.state;\n      const {\n        channel\n      } = videoDetails;\n      return /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n        children: values => {\n          const {\n            lightTheme,\n            addSavedVideos\n          } = values;\n          const bgColor = lightTheme ? '#ffffff' : '#0f0f0f';\n          const color = lightTheme ? '#000000' : '#ffffff';\n\n          const onSave = () => {\n            addSavedVideos(videoDetails);\n          };\n\n          return /*#__PURE__*/_jsxDEV(VideoContainer, {\n            bgColor: bgColor,\n            color: color,\n            \"data-testid\": \"videoItemDetails\",\n            children: [/*#__PURE__*/_jsxDEV(VideoFrameContainer, {\n              children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n                url: videoDetails.video_url,\n                controls: true,\n                className: \"react-player\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ParaEl, {\n                children: videoDetails.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AttributesContainer, {\n              children: [/*#__PURE__*/_jsxDEV(ParaEl, {\n                children: [videoDetails.view_count, \" views\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"dot\",\n                  children: /*#__PURE__*/_jsxDEV(BsDot, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), ' ', videoDetails.published_at]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ChannelContainer, {\n                color: color,\n                children: [/*#__PURE__*/_jsxDEV(IconParas, {\n                  onClick: this.isLiked,\n                  iconColor: liked ? '#2563eb' : '#64748b',\n                  children: [/*#__PURE__*/_jsxDEV(AiOutlineLike, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 21\n                  }, this), \" Like\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconParas, {\n                  onClick: this.isDisliked,\n                  iconColor: disliked ? '#2563eb' : '#64748b',\n                  children: [/*#__PURE__*/_jsxDEV(AiOutlineDislike, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 21\n                  }, this), \" Dislike\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconParas, {\n                  onClick: onSave,\n                  iconColor: saved ? '#2563eb' : '#64748b',\n                  type: \"button\",\n                  children: [/*#__PURE__*/_jsxDEV(MdPlaylistAdd, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this), \" \", saved ? 'Saved' : 'Save']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChannelContainer, {\n              children: [/*#__PURE__*/_jsxDEV(ImageEl, {\n                src: channel.profile_image_url,\n                alt: \"channel logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n                children: [/*#__PURE__*/_jsxDEV(ParaEl, {\n                  children: channel.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ParaEl, {\n                  children: channel.subscriber_count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ParaEl, {\n              padding: \"30px\",\n              children: videoDetails.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderLoader = () => /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: value => {\n        const {\n          lightTheme\n        } = value;\n        return /*#__PURE__*/_jsxDEV(LoaderContainer, {\n          lightTheme: lightTheme,\n          \"data-testid\": \"loader\",\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            type: \"TailSpin\",\n            color: \"#ff0000\",\n            height: \"60\",\n            width: \"60\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }, this);\n\n    this.onClickRetry = () => {\n      this.getData();\n    };\n\n    this.renderFailureView = () => /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: value => {\n        const {\n          lightTheme\n        } = value;\n        const bgColor = lightTheme ? '#ffffff' : '#000000';\n        const color = lightTheme ? '#000000' : '#ffffff';\n        return /*#__PURE__*/_jsxDEV(VideoContainer, {\n          bgColor: bgColor,\n          color: color,\n          children: /*#__PURE__*/_jsxDEV(FailureContainer, {\n            children: [/*#__PURE__*/_jsxDEV(FailureImage, {\n              src: lightTheme ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png' : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png',\n              alt: \"failure view\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FailureHeading, {\n              lightTheme: lightTheme,\n              children: \"Oops! Something Went Wrong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FailureDescription, {\n              lightTheme: lightTheme,\n              children: [\"We are having some trouble to complete your request. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 70\n              }, this), \"Please try again.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FailureRetryButton, {\n              type: \"button\",\n              onClick: this.onClickRetry,\n              children: \"Retry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }, this);\n\n    this.renderHome = () => {\n      const {\n        status\n      } = this.state;\n\n      switch (status) {\n        case 'loading':\n          return this.renderLoader();\n\n        case 'success':\n          return this.renderVideo();\n\n        case 'failure':\n          return this.renderFailureView();\n\n        default:\n          return null;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: value => {\n        const {\n          lightTheme\n        } = value;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            lightTheme: lightTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cont, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), this.renderHome()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default VideoItemDetails;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/VideoItemDetailsRoute/index.js"],"names":["Component","Cookies","ReactPlayer","Loader","BsDot","AiOutlineLike","AiOutlineDislike","MdPlaylistAdd","Header","Navbar","VideoFrameContainer","VideoContainer","ParaEl","AttributesContainer","ChannelContainer","ImageEl","ContentContainer","IconParas","Cont","LoaderContainer","FailureContainer","FailureImage","FailureHeading","FailureDescription","FailureRetryButton","ThemeContext","VideoItemDetails","state","videoDetails","liked","disliked","saved","status","getData","mounted","match","props","params","id","jwtToken","get","url","options","headers","Authorization","method","response","fetch","data","json","ok","setState","video_details","renderHome","value","savedVideos","isDisliked","isLiked","renderVideo","channel","values","lightTheme","addSavedVideos","bgColor","color","onSave","video_url","title","view_count","published_at","profile_image_url","name","subscriber_count","description","renderLoader","onClickRetry","renderFailureView","componentDidMount","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport ReactPlayer from 'react-player'\nimport Loader from 'react-loader-spinner'\nimport {BsDot} from 'react-icons/bs'\nimport {AiOutlineLike, AiOutlineDislike} from 'react-icons/ai'\nimport {MdPlaylistAdd} from 'react-icons/md'\nimport Header from '../Header'\nimport Navbar from '../Navbar'\n\nimport {\n  VideoFrameContainer,\n  VideoContainer,\n  ParaEl,\n  AttributesContainer,\n  ChannelContainer,\n  ImageEl,\n  ContentContainer,\n  IconParas,\n  Cont,\n  LoaderContainer,\n  FailureContainer,\n  FailureImage,\n  FailureHeading,\n  FailureDescription,\n  FailureRetryButton,\n} from './styledComponents'\n\nimport ThemeContext from '../../context/ThemeContext'\n\nimport './index.css'\n\nclass VideoItemDetails extends Component {\n  state = {\n    videoDetails: {},\n    liked: false,\n    disliked: false,\n    saved: false,\n    status: 'loading',\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  componentWillUnmount() {\n    this.mounted = false\n  }\n\n  getData = async () => {\n    this.mounted = true\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/videos/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok) {\n      this.setState(\n        {videoDetails: data.video_details, status: 'success'},\n        this.renderHome,\n      )\n\n      {\n        ;<ThemeContext.Consumer>\n          {value => {\n            const {savedVideos} = value\n            return null\n          }}\n        </ThemeContext.Consumer>\n      }\n    } else {\n      this.setState({status: 'failure'}, this.renderHome)\n    }\n  }\n\n  isDisliked = () => {\n    const {liked, disliked} = this.state\n    if (liked) {\n      this.setState({liked: false})\n    }\n    if (disliked) {\n      this.setState({disliked: false})\n    } else {\n      this.setState({disliked: true})\n    }\n  }\n\n  isLiked = () => {\n    const {liked, disliked} = this.state\n    if (disliked) {\n      this.setState({disliked: false})\n    }\n    if (liked) {\n      this.setState({liked: false})\n    } else {\n      this.setState({liked: true})\n    }\n  }\n\n  renderVideo = () => {\n    const {videoDetails, liked, disliked, saved} = this.state\n    const {channel} = videoDetails\n    return (\n      <ThemeContext.Consumer>\n        {values => {\n          const {lightTheme, addSavedVideos} = values\n          const bgColor = lightTheme ? '#ffffff' : '#0f0f0f'\n          const color = lightTheme ? '#000000' : '#ffffff'\n\n          const onSave = () => {\n            addSavedVideos(videoDetails)\n          }\n\n          return (\n            <VideoContainer\n              bgColor={bgColor}\n              color={color}\n              data-testid=\"videoItemDetails\"\n            >\n              <VideoFrameContainer>\n                <ReactPlayer\n                  url={videoDetails.video_url}\n                  controls\n                  className=\"react-player\"\n                />\n                <ParaEl>{videoDetails.title}</ParaEl>\n              </VideoFrameContainer>\n              <AttributesContainer>\n                <ParaEl>\n                  {videoDetails.view_count} views{' '}\n                  <span className=\"dot\">\n                    <BsDot />\n                  </span>{' '}\n                  {videoDetails.published_at}\n                </ParaEl>\n                <ChannelContainer color={color}>\n                  <IconParas\n                    onClick={this.isLiked}\n                    iconColor={liked ? '#2563eb' : '#64748b'}\n                  >\n                    <AiOutlineLike size={20} /> Like\n                  </IconParas>\n                  <IconParas\n                    onClick={this.isDisliked}\n                    iconColor={disliked ? '#2563eb' : '#64748b'}\n                  >\n                    <AiOutlineDislike size={20} /> Dislike\n                  </IconParas>\n                  <IconParas\n                    onClick={onSave}\n                    iconColor={saved ? '#2563eb' : '#64748b'}\n                    type=\"button\"\n                  >\n                    <MdPlaylistAdd size={20} /> {saved ? 'Saved' : 'Save'}\n                  </IconParas>\n                </ChannelContainer>\n              </AttributesContainer>\n              <ChannelContainer>\n                <ImageEl src={channel.profile_image_url} alt=\"channel logo\" />\n                <ContentContainer>\n                  <ParaEl>{channel.name}</ParaEl>\n                  <ParaEl>{channel.subscriber_count}</ParaEl>\n                </ContentContainer>\n              </ChannelContainer>\n              <ParaEl padding=\"30px\">{videoDetails.description}</ParaEl>\n            </VideoContainer>\n          )\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n\n  renderLoader = () => (\n    <ThemeContext.Consumer>\n      {value => {\n        const {lightTheme} = value\n        return (\n          <LoaderContainer lightTheme={lightTheme} data-testid=\"loader\">\n            <Loader type=\"TailSpin\" color=\"#ff0000\" height=\"60\" width=\"60\" />\n          </LoaderContainer>\n        )\n      }}\n    </ThemeContext.Consumer>\n  )\n\n  onClickRetry = () => {\n    this.getData()\n  }\n\n  renderFailureView = () => (\n    <ThemeContext.Consumer>\n      {value => {\n        const {lightTheme} = value\n        const bgColor = lightTheme ? '#ffffff' : '#000000'\n        const color = lightTheme ? '#000000' : '#ffffff'\n        return (\n          <VideoContainer bgColor={bgColor} color={color}>\n            <FailureContainer>\n              <FailureImage\n                src={\n                  lightTheme\n                    ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-light-theme-img.png'\n                    : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-failure-view-dark-theme-img.png'\n                }\n                alt=\"failure view\"\n              />\n              <FailureHeading lightTheme={lightTheme}>\n                Oops! Something Went Wrong\n              </FailureHeading>\n              <FailureDescription lightTheme={lightTheme}>\n                We are having some trouble to complete your request. <br />\n                Please try again.\n              </FailureDescription>\n              <FailureRetryButton type=\"button\" onClick={this.onClickRetry}>\n                Retry\n              </FailureRetryButton>\n            </FailureContainer>\n          </VideoContainer>\n        )\n      }}\n    </ThemeContext.Consumer>\n  )\n\n  renderHome = () => {\n    const {status} = this.state\n    switch (status) {\n      case 'loading':\n        return this.renderLoader()\n      case 'success':\n        return this.renderVideo()\n      case 'failure':\n        return this.renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <ThemeContext.Consumer>\n        {value => {\n          const {lightTheme} = value\n          return (\n            <>\n              <Header lightTheme={lightTheme} />\n              <Cont>\n                <Navbar />\n                {this.renderHome()}\n              </Cont>\n            </>\n          )\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default VideoItemDetails\n"]},"metadata":{},"sourceType":"module"}