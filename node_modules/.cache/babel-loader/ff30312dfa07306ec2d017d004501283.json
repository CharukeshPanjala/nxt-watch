{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/VideoItemDetailsRoute/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport ReactPlayer from 'react-player';\nimport { AiOutlineLike, AiOutlineDislike } from 'react-icons/ai';\nimport { MdPlaylistAdd } from 'react-icons/md';\nimport Header from '../Header';\nimport Navbar from '../Navbar';\nimport { VideoFrameContainer, VideoContainer, ParaEl, AttributesContainer, ChannelContainer, ImageEl, ContentContainer, IconParas } from './styledComponents';\nimport ThemeContext from '../../context/ThemeContext';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass VideoItemDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoDetails: {},\n      channelDataObj: {},\n      liked: false,\n      disliked: false,\n      saved: false\n    };\n\n    this.getData = async () => {\n      this.mounted = true;\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const {\n        id\n      } = params;\n      const jwtToken = Cookies.get('jwt_token');\n      const url = `https://apis.ccbp.in/videos/${id}`;\n      const options = {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        },\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n\n      if (response.ok) {\n        const responseData = await response.json();\n        const data = responseData.video_details;\n        const convertedData = {\n          channel: data.channel,\n          description: data.description,\n          id: data.id,\n          publishedAt: data.published_at,\n          thumbnailUrl: data.thumbnail_url,\n          title: data.title,\n          videoUrl: data.video_url,\n          viewCount: data.view_count\n        };\n        const channelData = {\n          name: data.channel.name,\n          profileImageUrl: data.channel.profile_image_url,\n          subscriberCount: data.channel.subscriber_count\n        };\n\n        if (this.mounted) {\n          await this.setState({\n            videoDetails: convertedData,\n            channelDataObj: channelData\n          });\n        }\n      }\n    };\n\n    this.isDisliked = () => {\n      const {\n        liked,\n        disliked\n      } = this.state;\n\n      if (liked) {\n        this.setState({\n          liked: false\n        });\n      }\n\n      if (disliked) {\n        this.setState({\n          disliked: false\n        });\n      } else {\n        this.setState({\n          disliked: true\n        });\n      }\n    };\n\n    this.isLiked = () => {\n      const {\n        liked,\n        disliked\n      } = this.state;\n\n      if (disliked) {\n        this.setState({\n          disliked: false\n        });\n      }\n\n      if (liked) {\n        this.setState({\n          liked: false\n        });\n      } else {\n        this.setState({\n          liked: true\n        });\n      }\n    };\n\n    this.isSaved = async () => {\n      const {\n        saved\n      } = this.state;\n\n      if (saved) {\n        await this.setState({\n          saved: false\n        });\n      } else {\n        await this.setState({\n          saved: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const {\n      videoDetails,\n      channelDataObj,\n      liked,\n      disliked,\n      saved\n    } = this.state;\n    const {\n      videoUrl,\n      title,\n      viewCount,\n      publishedAt,\n      description\n    } = videoDetails;\n    return /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: values => {\n        const {\n          activeTheme,\n          addSavedVideos\n        } = values;\n        const bgColor = activeTheme === 'light' ? '#ffffff' : '#000000';\n        const color = activeTheme === 'light' ? '#000000' : '#ffffff';\n\n        const onSave = () => {\n          this.isSaved();\n          addSavedVideos(videoDetails);\n        };\n\n        return /*#__PURE__*/_jsxDEV(VideoContainer, {\n          bgColor: bgColor,\n          color: color,\n          children: [/*#__PURE__*/_jsxDEV(VideoFrameContainer, {\n            children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n              url: videoUrl,\n              controls: true,\n              className: \"react-player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ParaEl, {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AttributesContainer, {\n            children: [/*#__PURE__*/_jsxDEV(ParaEl, {\n              children: [viewCount, \" views . \", publishedAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ChannelContainer, {\n              color: color,\n              children: [/*#__PURE__*/_jsxDEV(IconParas, {\n                onClick: this.isLiked,\n                iconColor: liked ? '#3b82f6' : color,\n                children: [/*#__PURE__*/_jsxDEV(AiOutlineLike, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), \" Like\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconParas, {\n                onClick: this.isDisliked,\n                iconColor: disliked ? '#3b82f6' : color,\n                children: [/*#__PURE__*/_jsxDEV(AiOutlineDislike, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this), \" Dislike\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconParas, {\n                onClick: onSave,\n                iconColor: saved ? '#3b82f6' : color,\n                children: [/*#__PURE__*/_jsxDEV(MdPlaylistAdd, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this), \" \", saved ? 'Saved' : 'Save']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ChannelContainer, {\n            children: [/*#__PURE__*/_jsxDEV(ImageEl, {\n              src: channelDataObj.profileImageUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n              children: [/*#__PURE__*/_jsxDEV(ParaEl, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: channelDataObj.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ParaEl, {\n                children: channelDataObj.subscriberCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ParaEl, {\n            padding: \"30px\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default VideoItemDetails;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/VideoItemDetailsRoute/index.js"],"names":["Component","Cookies","ReactPlayer","AiOutlineLike","AiOutlineDislike","MdPlaylistAdd","Header","Navbar","VideoFrameContainer","VideoContainer","ParaEl","AttributesContainer","ChannelContainer","ImageEl","ContentContainer","IconParas","ThemeContext","VideoItemDetails","state","videoDetails","channelDataObj","liked","disliked","saved","getData","mounted","match","props","params","id","jwtToken","get","url","options","headers","Authorization","method","response","fetch","ok","responseData","json","data","video_details","convertedData","channel","description","publishedAt","published_at","thumbnailUrl","thumbnail_url","title","videoUrl","video_url","viewCount","view_count","channelData","name","profileImageUrl","profile_image_url","subscriberCount","subscriber_count","setState","isDisliked","isLiked","isSaved","componentDidMount","componentWillUnmount","render","values","activeTheme","addSavedVideos","bgColor","color","onSave"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport ReactPlayer from 'react-player'\n\nimport {AiOutlineLike, AiOutlineDislike} from 'react-icons/ai'\nimport {MdPlaylistAdd} from 'react-icons/md'\nimport Header from '../Header'\nimport Navbar from '../Navbar'\n\nimport {\n  VideoFrameContainer,\n  VideoContainer,\n  ParaEl,\n  AttributesContainer,\n  ChannelContainer,\n  ImageEl,\n  ContentContainer,\n  IconParas,\n} from './styledComponents'\n\nimport ThemeContext from '../../context/ThemeContext'\n\nimport './index.css'\n\nclass VideoItemDetails extends Component {\n  state = {\n    videoDetails: {},\n    channelDataObj: {},\n    liked: false,\n    disliked: false,\n    saved: false,\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  componentWillUnmount() {\n    this.mounted = false\n  }\n\n  getData = async () => {\n    this.mounted = true\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/videos/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const responseData = await response.json()\n      const data = responseData.video_details\n      const convertedData = {\n        channel: data.channel,\n        description: data.description,\n        id: data.id,\n        publishedAt: data.published_at,\n        thumbnailUrl: data.thumbnail_url,\n        title: data.title,\n        videoUrl: data.video_url,\n        viewCount: data.view_count,\n      }\n      const channelData = {\n        name: data.channel.name,\n        profileImageUrl: data.channel.profile_image_url,\n        subscriberCount: data.channel.subscriber_count,\n      }\n      if (this.mounted) {\n        await this.setState({\n          videoDetails: convertedData,\n          channelDataObj: channelData,\n        })\n      }\n    }\n  }\n\n  isDisliked = () => {\n    const {liked, disliked} = this.state\n    if (liked) {\n      this.setState({liked: false})\n    }\n    if (disliked) {\n      this.setState({disliked: false})\n    } else {\n      this.setState({disliked: true})\n    }\n  }\n\n  isLiked = () => {\n    const {liked, disliked} = this.state\n    if (disliked) {\n      this.setState({disliked: false})\n    }\n    if (liked) {\n      this.setState({liked: false})\n    } else {\n      this.setState({liked: true})\n    }\n  }\n\n  isSaved = async () => {\n    const {saved} = this.state\n    if (saved) {\n      await this.setState({saved: false})\n    } else {\n      await this.setState({saved: true})\n    }\n  }\n\n  render() {\n    const {videoDetails, channelDataObj, liked, disliked, saved} = this.state\n    const {videoUrl, title, viewCount, publishedAt, description} = videoDetails\n    return (\n      <ThemeContext.Consumer>\n        {values => {\n          const {activeTheme, addSavedVideos} = values\n          const bgColor = activeTheme === 'light' ? '#ffffff' : '#000000'\n          const color = activeTheme === 'light' ? '#000000' : '#ffffff'\n\n          const onSave = () => {\n            this.isSaved()\n            addSavedVideos(videoDetails)\n          }\n\n          return (\n            <VideoContainer bgColor={bgColor} color={color}>\n              <VideoFrameContainer>\n                <ReactPlayer url={videoUrl} controls className=\"react-player\" />\n                <ParaEl>\n                  <b>{title}</b>\n                </ParaEl>\n              </VideoFrameContainer>\n              <AttributesContainer>\n                <ParaEl>\n                  {viewCount} views . {publishedAt}\n                </ParaEl>\n                <ChannelContainer color={color}>\n                  <IconParas\n                    onClick={this.isLiked}\n                    iconColor={liked ? '#3b82f6' : color}\n                  >\n                    <AiOutlineLike size={20} /> Like\n                  </IconParas>\n                  <IconParas\n                    onClick={this.isDisliked}\n                    iconColor={disliked ? '#3b82f6' : color}\n                  >\n                    <AiOutlineDislike size={20} /> Dislike\n                  </IconParas>\n                  <IconParas\n                    onClick={onSave}\n                    iconColor={saved ? '#3b82f6' : color}\n                  >\n                    <MdPlaylistAdd size={20} /> {saved ? 'Saved' : 'Save'}\n                  </IconParas>\n                </ChannelContainer>\n              </AttributesContainer>\n              <ChannelContainer>\n                <ImageEl src={channelDataObj.profileImageUrl} />\n                <ContentContainer>\n                  <ParaEl>\n                    <b>{channelDataObj.name}</b>\n                  </ParaEl>\n                  <ParaEl>{channelDataObj.subscriberCount}</ParaEl>\n                </ContentContainer>\n              </ChannelContainer>\n              <ParaEl padding=\"30px\">{description}</ParaEl>\n            </VideoContainer>\n          )\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default VideoItemDetails\n"]},"metadata":{},"sourceType":"module"}