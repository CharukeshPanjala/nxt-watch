{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/LoginRoute/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { Redirect } from 'react-router-dom';\nimport ThemeContext from '../../context/ThemeContext';\nimport { BgContainer, Card, WatchLogo, FormContainer, LabelElement, InputElement, CheckboxContainer, CheckboxLabel, LoginButton } from './styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginRoute extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showPassword: false,\n      username: '',\n      password: ''\n    };\n\n    this.onChangeUsername = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.onChangePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.onChangeShowPassword = () => {\n      this.setState(prevState => ({\n        showPassword: !prevState.showPassword\n      }));\n    };\n\n    this.onSubmitSuccess = jwtToken => {\n      const {\n        history\n      } = this.props;\n      Cookies.set('jwt_token', jwtToken, {\n        expires: 30,\n        path: '/'\n      });\n      history.replace('/');\n    };\n\n    this.onSubmitFailure = errorMsg => {\n      console.log(errorMsg);\n      this.setState({\n        showSubmitError: true,\n        errorMsg\n      });\n    };\n\n    this.onSubmitForm = async event => {\n      event.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n      const userDetails = {\n        username,\n        password\n      };\n      const url = 'https://apis.ccbp.in/login';\n      const options = {\n        method: 'POST',\n        body: JSON.stringify(userDetails)\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n\n      if (response.ok === true) {\n        this.onSubmitSuccess(data.jwt_token);\n      } else {\n        this.onSubmitFailure(data.error_msg);\n      }\n    };\n  }\n\n  render() {\n    const {\n      showPassword,\n      username,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: value => {\n        const {\n          lightTheme\n        } = value;\n        const LogoUrl = lightTheme ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-light-theme-img.png' : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-dark-theme-img.png';\n        return /*#__PURE__*/_jsxDEV(BgContainer, {\n          lightTheme: `${lightTheme}`,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            lightTheme: `${lightTheme}`,\n            children: [/*#__PURE__*/_jsxDEV(WatchLogo, {\n              src: LogoUrl,\n              alt: \"nxt watch logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n              onSubmit: this.onSubmitForm,\n              children: [/*#__PURE__*/_jsxDEV(LabelElement, {\n                htmlFor: \"username\",\n                children: \"USERNAME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(InputElement, {\n                id: \"username\",\n                type: \"text\",\n                placeholder: \"Username\",\n                onChange: this.onChangeUsername,\n                value: username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LabelElement, {\n                htmlFor: \"password\",\n                children: \"PASSWORD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(InputElement, {\n                id: \"password\",\n                type: showPassword ? 'text' : 'password',\n                placeholder: \"Password\",\n                onChange: this.onChangePassword,\n                value: password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n                children: [/*#__PURE__*/_jsxDEV(InputElement, {\n                  id: \"checkbox\",\n                  type: \"checkbox\",\n                  checked: showPassword,\n                  onChange: this.onChangeShowPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n                  htmlFor: \"checkbox\",\n                  children: \"Show Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n                type: \"submit\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginRoute;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/LoginRoute/index.js"],"names":["Component","Cookies","Redirect","ThemeContext","BgContainer","Card","WatchLogo","FormContainer","LabelElement","InputElement","CheckboxContainer","CheckboxLabel","LoginButton","LoginRoute","state","showPassword","username","password","onChangeUsername","event","setState","target","value","onChangePassword","onChangeShowPassword","prevState","onSubmitSuccess","jwtToken","history","props","set","expires","path","replace","onSubmitFailure","errorMsg","console","log","showSubmitError","onSubmitForm","preventDefault","userDetails","url","options","method","body","JSON","stringify","response","fetch","data","json","ok","jwt_token","error_msg","render","lightTheme","LogoUrl"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\nimport ThemeContext from '../../context/ThemeContext'\nimport {\n  BgContainer,\n  Card,\n  WatchLogo,\n  FormContainer,\n  LabelElement,\n  InputElement,\n  CheckboxContainer,\n  CheckboxLabel,\n  LoginButton,\n} from './styledComponents'\n\nclass LoginRoute extends Component {\n  state = {\n    showPassword: false,\n    username: '',\n    password: '',\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onChangeShowPassword = () => {\n    this.setState(prevState => ({showPassword: !prevState.showPassword}))\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n    })\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMsg => {\n    console.log(errorMsg)\n    this.setState({showSubmitError: true, errorMsg})\n  }\n\n  onSubmitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  render() {\n    const {showPassword, username, password} = this.state\n    return (\n      <ThemeContext.Consumer>\n        {value => {\n          const {lightTheme} = value\n          const LogoUrl = lightTheme\n            ? 'https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-light-theme-img.png'\n            : 'https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-dark-theme-img.png'\n          return (\n            <BgContainer lightTheme={`${lightTheme}`}>\n              <Card lightTheme={`${lightTheme}`}>\n                <WatchLogo src={LogoUrl} alt=\"nxt watch logo\" />\n                <FormContainer onSubmit={this.onSubmitForm}>\n                  <LabelElement htmlFor=\"username\">USERNAME</LabelElement>\n                  <InputElement\n                    id=\"username\"\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    onChange={this.onChangeUsername}\n                    value={username}\n                  />\n                  <LabelElement htmlFor=\"password\">PASSWORD</LabelElement>\n                  <InputElement\n                    id=\"password\"\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                    onChange={this.onChangePassword}\n                    value={password}\n                  />\n                  <CheckboxContainer>\n                    <InputElement\n                      id=\"checkbox\"\n                      type=\"checkbox\"\n                      checked={showPassword}\n                      onChange={this.onChangeShowPassword}\n                    />\n                    <CheckboxLabel htmlFor=\"checkbox\">\n                      Show Password\n                    </CheckboxLabel>\n                  </CheckboxContainer>\n                  <LoginButton type=\"submit\">Login</LoginButton>\n                </FormContainer>\n              </Card>\n            </BgContainer>\n          )\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default LoginRoute\n"]},"metadata":{},"sourceType":"module"}