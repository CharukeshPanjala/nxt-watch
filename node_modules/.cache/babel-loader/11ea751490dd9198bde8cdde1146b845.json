{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/VideoItemDetailsRoute/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport ReactPlayer from 'react-player';\nimport { AiOutlineLike, AiOutlineDislike } from 'react-icons/ai';\nimport { MdPlaylistAdd } from 'react-icons/md';\nimport Header from '../Header';\nimport Navbar from '../Navbar';\nimport { VideoFrameContainer, VideoContainer, ParaEl, AttributesContainer, ChannelContainer, ImageEl, ContentContainer, IconParas } from './styledComponents';\nimport ThemeContext from '../../context/ThemeContext';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass VideoItemDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoDetails: {},\n      channelDataObj: {},\n      liked: false,\n      disliked: false,\n      saved: false\n    };\n\n    this.getData = async () => {\n      this.mounted = true;\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const {\n        id\n      } = params;\n      const jwtToken = Cookies.get('jwt_token');\n      const url = `https://apis.ccbp.in/videos/${id}`;\n      const options = {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        },\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n\n      if (response.ok) {\n        const responseData = await response.json();\n        const data = responseData.video_details;\n        const convertedData = {\n          channel: data.channel,\n          description: data.description,\n          id: data.id,\n          publishedAt: data.published_at,\n          thumbnailUrl: data.thumbnail_url,\n          title: data.title,\n          videoUrl: data.video_url,\n          viewCount: data.view_count\n        };\n        const channelData = {\n          name: data.channel.name,\n          profileImageUrl: data.channel.profile_image_url,\n          subscriberCount: data.channel.subscriber_count\n        };\n\n        if (this.mounted) {\n          await this.setState({\n            videoDetails: convertedData,\n            channelDataObj: channelData\n          });\n        }\n      }\n    };\n\n    this.isDisliked = () => {\n      const {\n        liked,\n        disliked\n      } = this.state;\n\n      if (liked) {\n        this.setState({\n          liked: false\n        });\n      }\n\n      if (disliked) {\n        this.setState({\n          disliked: false\n        });\n      } else {\n        this.setState({\n          disliked: true\n        });\n      }\n    };\n\n    this.isLiked = () => {\n      const {\n        liked,\n        disliked\n      } = this.state;\n\n      if (disliked) {\n        this.setState({\n          disliked: false\n        });\n      }\n\n      if (liked) {\n        this.setState({\n          liked: false\n        });\n      } else {\n        this.setState({\n          liked: true\n        });\n      }\n    };\n\n    this.isSaved = async () => {\n      const {\n        saved\n      } = this.state;\n\n      if (saved) {\n        await this.setState({\n          saved: false\n        });\n      } else {\n        await this.setState({\n          saved: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const {\n      videoDetails,\n      channelDataObj,\n      liked,\n      disliked,\n      saved\n    } = this.state;\n    const {\n      videoUrl,\n      title,\n      viewCount,\n      publishedAt,\n      description\n    } = videoDetails;\n    return /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: value => {\n        const {\n          lightTheme\n        } = value;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            lightTheme: lightTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cont, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), this.renderVideo()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default VideoItemDetails;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/VideoItemDetailsRoute/index.js"],"names":["Component","Cookies","ReactPlayer","AiOutlineLike","AiOutlineDislike","MdPlaylistAdd","Header","Navbar","VideoFrameContainer","VideoContainer","ParaEl","AttributesContainer","ChannelContainer","ImageEl","ContentContainer","IconParas","ThemeContext","VideoItemDetails","state","videoDetails","channelDataObj","liked","disliked","saved","getData","mounted","match","props","params","id","jwtToken","get","url","options","headers","Authorization","method","response","fetch","ok","responseData","json","data","video_details","convertedData","channel","description","publishedAt","published_at","thumbnailUrl","thumbnail_url","title","videoUrl","video_url","viewCount","view_count","channelData","name","profileImageUrl","profile_image_url","subscriberCount","subscriber_count","setState","isDisliked","isLiked","isSaved","componentDidMount","componentWillUnmount","render","value","lightTheme","renderVideo"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport ReactPlayer from 'react-player'\n\nimport {AiOutlineLike, AiOutlineDislike} from 'react-icons/ai'\nimport {MdPlaylistAdd} from 'react-icons/md'\nimport Header from '../Header'\nimport Navbar from '../Navbar'\n\nimport {\n  VideoFrameContainer,\n  VideoContainer,\n  ParaEl,\n  AttributesContainer,\n  ChannelContainer,\n  ImageEl,\n  ContentContainer,\n  IconParas,\n} from './styledComponents'\n\nimport ThemeContext from '../../context/ThemeContext'\n\nimport './index.css'\n\nclass VideoItemDetails extends Component {\n  state = {\n    videoDetails: {},\n    channelDataObj: {},\n    liked: false,\n    disliked: false,\n    saved: false,\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  componentWillUnmount() {\n    this.mounted = false\n  }\n\n  getData = async () => {\n    this.mounted = true\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/videos/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const responseData = await response.json()\n      const data = responseData.video_details\n      const convertedData = {\n        channel: data.channel,\n        description: data.description,\n        id: data.id,\n        publishedAt: data.published_at,\n        thumbnailUrl: data.thumbnail_url,\n        title: data.title,\n        videoUrl: data.video_url,\n        viewCount: data.view_count,\n      }\n      const channelData = {\n        name: data.channel.name,\n        profileImageUrl: data.channel.profile_image_url,\n        subscriberCount: data.channel.subscriber_count,\n      }\n      if (this.mounted) {\n        await this.setState({\n          videoDetails: convertedData,\n          channelDataObj: channelData,\n        })\n      }\n    }\n  }\n\n  isDisliked = () => {\n    const {liked, disliked} = this.state\n    if (liked) {\n      this.setState({liked: false})\n    }\n    if (disliked) {\n      this.setState({disliked: false})\n    } else {\n      this.setState({disliked: true})\n    }\n  }\n\n  isLiked = () => {\n    const {liked, disliked} = this.state\n    if (disliked) {\n      this.setState({disliked: false})\n    }\n    if (liked) {\n      this.setState({liked: false})\n    } else {\n      this.setState({liked: true})\n    }\n  }\n\n  isSaved = async () => {\n    const {saved} = this.state\n    if (saved) {\n      await this.setState({saved: false})\n    } else {\n      await this.setState({saved: true})\n    }\n  }\n\n  render() {\n    const {videoDetails, channelDataObj, liked, disliked, saved} = this.state\n    const {videoUrl, title, viewCount, publishedAt, description} = videoDetails\n    return (\n      <ThemeContext.Consumer>\n        {value => {\n          const {lightTheme} = value\n          return (\n            <>\n              <Header lightTheme={lightTheme} />\n              <Cont>\n                <Navbar />\n                {this.renderVideo()}\n              </Cont>\n            </>\n          )\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default VideoItemDetails\n"]},"metadata":{},"sourceType":"module"}