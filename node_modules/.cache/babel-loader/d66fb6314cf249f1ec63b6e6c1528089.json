{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/Home/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport Loader from 'react-loader-spinner';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport Header from '../Header';\nimport Navbar from '../Navbar';\nimport ThemeContext from '../../context/ThemeContext';\nimport { LoaderContainer, SearchContainer, SearchIp, SearchButton, Cont, VideosContainer } from './styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      status: 'loading',\n      searchIp: '',\n      showPopup: true,\n      arrayList: []\n    };\n\n    this.getVideos = async (searchVal = '') => {\n      const jwtToken = Cookies.get('jwt_token');\n      const url = `https://apis.ccbp.in/videos/all?search=${searchVal}`;\n      const options = {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        },\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n\n      if (response.ok) {\n        this.setState({\n          status: 'success',\n          arrayList: data\n        });\n      }\n    };\n\n    this.renderLoader = () => /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: value => {\n        const {\n          lightTheme\n        } = value;\n        return /*#__PURE__*/_jsxDEV(LoaderContainer, {\n          lightTheme: lightTheme,\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            type: \"Puff\",\n            color: \"#475569\",\n            height: \"60\",\n            width: \"60\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this);\n\n    this.onChange = event => {\n      this.setState({\n        searchIp: event.target.value\n      });\n    };\n\n    this.onSearch = () => {\n      const {\n        searchIp\n      } = this.state;\n      this.getVideos(searchIp);\n    };\n\n    this.onKey = event => {\n      if (event.key.toLowerCase() === 'enter') {\n        this.onSearch();\n      }\n    };\n\n    this.renderSearchBar = () => /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: value => {\n        const {\n          lightTheme\n        } = value;\n        const {\n          searchIp\n        } = this.state;\n        return /*#__PURE__*/_jsxDEV(SearchContainer, {\n          children: [/*#__PURE__*/_jsxDEV(SearchIp, {\n            placeholder: \"Search Channel\",\n            type: \"search\",\n            value: searchIp,\n            onChange: this.onChange,\n            onKeyDown: this.onKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n            onClick: this.onSearch,\n            lightTheme: lightTheme,\n            children: /*#__PURE__*/_jsxDEV(AiOutlineSearch, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this);\n\n    this.renderVideos = () => /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: value => {\n        const {\n          lightTheme\n        } = value;\n        return /*#__PURE__*/_jsxDEV(VideosContainer, {\n          children: this.renderSearchBar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 16\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this);\n\n    this.renderHome = () => {\n      const {\n        status\n      } = this.state;\n\n      switch (status) {\n        case 'loading':\n          return this.renderLoader();\n\n        case 'success':\n          return this.renderVideos();\n\n        default:\n          return null;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getVideos();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: value => {\n        const {\n          lightTheme\n        } = value;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            lightTheme: lightTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cont, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), this.renderHome()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/Home/index.js"],"names":["Component","Cookies","Loader","AiOutlineSearch","Header","Navbar","ThemeContext","LoaderContainer","SearchContainer","SearchIp","SearchButton","Cont","VideosContainer","Home","state","status","searchIp","showPopup","arrayList","getVideos","searchVal","jwtToken","get","url","options","headers","Authorization","method","response","fetch","data","json","ok","setState","renderLoader","value","lightTheme","onChange","event","target","onSearch","onKey","key","toLowerCase","renderSearchBar","renderVideos","renderHome","componentDidMount","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport {AiOutlineSearch} from 'react-icons/ai'\nimport Header from '../Header'\nimport Navbar from '../Navbar'\nimport ThemeContext from '../../context/ThemeContext'\nimport {\n  LoaderContainer,\n  SearchContainer,\n  SearchIp,\n  SearchButton,\n  Cont,\n  VideosContainer,\n} from './styledComponents'\n\nclass Home extends Component {\n  state = {status: 'loading', searchIp: '', showPopup: true, arrayList: []}\n\n  componentDidMount() {\n    this.getVideos()\n  }\n\n  getVideos = async (searchVal = '') => {\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/videos/all?search=${searchVal}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok) {\n      this.setState({status: 'success', arrayList: data})\n    }\n  }\n\n  renderLoader = () => (\n    <ThemeContext.Consumer>\n      {value => {\n        const {lightTheme} = value\n        return (\n          <LoaderContainer lightTheme={lightTheme}>\n            <Loader type=\"Puff\" color=\"#475569\" height=\"60\" width=\"60\" />\n          </LoaderContainer>\n        )\n      }}\n    </ThemeContext.Consumer>\n  )\n\n  onChange = event => {\n    this.setState({searchIp: event.target.value})\n  }\n\n  onSearch = () => {\n    const {searchIp} = this.state\n    this.getVideos(searchIp)\n  }\n\n  onKey = event => {\n    if (event.key.toLowerCase() === 'enter') {\n      this.onSearch()\n    }\n  }\n\n  renderSearchBar = () => (\n    <ThemeContext.Consumer>\n      {value => {\n        const {lightTheme} = value\n        const {searchIp} = this.state\n        return (\n          <SearchContainer>\n            <SearchIp\n              placeholder=\"Search Channel\"\n              type=\"search\"\n              value={searchIp}\n              onChange={this.onChange}\n              onKeyDown={this.onKey}\n            />\n            <SearchButton onClick={this.onSearch} lightTheme={lightTheme}>\n              <AiOutlineSearch size={20} />\n            </SearchButton>\n          </SearchContainer>\n        )\n      }}\n    </ThemeContext.Consumer>\n  )\n\n  renderVideos = () => (\n    <ThemeContext.Consumer>\n      {value => {\n        const {lightTheme} = value\n        return <VideosContainer>{this.renderSearchBar()}</VideosContainer>\n      }}\n    </ThemeContext.Consumer>\n  )\n\n  renderHome = () => {\n    const {status} = this.state\n    switch (status) {\n      case 'loading':\n        return this.renderLoader()\n      case 'success':\n        return this.renderVideos()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <ThemeContext.Consumer>\n        {value => {\n          const {lightTheme} = value\n          return (\n            <>\n              <Header lightTheme={lightTheme} />\n              <Cont>\n                <Navbar />\n                {this.renderHome()}\n              </Cont>\n            </>\n          )\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}