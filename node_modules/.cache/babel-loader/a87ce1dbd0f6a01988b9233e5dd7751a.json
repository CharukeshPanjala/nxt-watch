{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/VideoItemDetailsRoute/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport ReactPlayer from 'react-player';\nimport { AiOutlineLike, AiOutlineDislike } from 'react-icons/ai';\nimport { MdPlaylistAdd } from 'react-icons/md';\nimport Header from '../Header';\nimport Navbar from '../Navbar';\nimport { VideoFrameContainer, VideoContainer, ParaEl, AttributesContainer, ChannelContainer, ImageEl, ContentContainer, IconParas, Cont } from './styledComponents';\nimport ThemeContext from '../../context/ThemeContext';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass VideoItemDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoDetails: {},\n      liked: false,\n      disliked: false,\n      saved: false\n    };\n\n    this.getData = async () => {\n      this.mounted = true;\n      const {\n        match\n      } = this.props;\n      const {\n        params\n      } = match;\n      const {\n        id\n      } = params;\n      const jwtToken = Cookies.get('jwt_token');\n      const url = `https://apis.ccbp.in/videos/${id}`;\n      const options = {\n        headers: {\n          Authorization: `Bearer ${jwtToken}`\n        },\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n\n      if (response.ok) {\n        const responseData = await response.json();\n        const data = responseData.video_details;\n\n        if (this.mounted) {\n          await this.setState({\n            videoDetails: data\n          });\n        }\n      }\n    };\n\n    this.isDisliked = () => {\n      const {\n        liked,\n        disliked\n      } = this.state;\n\n      if (liked) {\n        this.setState({\n          liked: false\n        });\n      }\n\n      if (disliked) {\n        this.setState({\n          disliked: false\n        });\n      } else {\n        this.setState({\n          disliked: true\n        });\n      }\n    };\n\n    this.isLiked = () => {\n      const {\n        liked,\n        disliked\n      } = this.state;\n\n      if (disliked) {\n        this.setState({\n          disliked: false\n        });\n      }\n\n      if (liked) {\n        this.setState({\n          liked: false\n        });\n      } else {\n        this.setState({\n          liked: true\n        });\n      }\n    };\n\n    this.isSaved = async () => {\n      const {\n        saved\n      } = this.state;\n\n      if (saved) {\n        await this.setState({\n          saved: false\n        });\n      } else {\n        await this.setState({\n          saved: true\n        });\n      }\n    };\n\n    this.renderVideo = () => {\n      const {\n        videoDetails,\n        liked,\n        disliked,\n        saved\n      } = this.state;\n      const {\n        channel\n      } = videoDetails;\n      const {\n        videoUrl,\n        title,\n        viewCount,\n        publishedAt,\n        description\n      } = videoDetails;\n      return /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n        children: values => {\n          const {\n            lightTheme,\n            addSavedVideos\n          } = values;\n          const bgColor = lightTheme ? '#ffffff' : '#000000';\n          const color = lightTheme ? '#000000' : '#ffffff';\n\n          const onSave = () => {\n            this.isSaved();\n            addSavedVideos(videoDetails);\n          };\n\n          return /*#__PURE__*/_jsxDEV(VideoContainer, {\n            bgColor: bgColor,\n            color: color,\n            children: [/*#__PURE__*/_jsxDEV(VideoFrameContainer, {\n              children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n                url: videoDetails.video_url,\n                controls: true,\n                className: \"react-player\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ParaEl, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AttributesContainer, {\n              children: [/*#__PURE__*/_jsxDEV(ParaEl, {\n                children: [viewCount, \" views . \", publishedAt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ChannelContainer, {\n                color: color,\n                children: [/*#__PURE__*/_jsxDEV(IconParas, {\n                  onClick: this.isLiked,\n                  iconColor: liked ? '#3b82f6' : color,\n                  children: [/*#__PURE__*/_jsxDEV(AiOutlineLike, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 21\n                  }, this), \" Like\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconParas, {\n                  onClick: this.isDisliked,\n                  iconColor: disliked ? '#3b82f6' : color,\n                  children: [/*#__PURE__*/_jsxDEV(AiOutlineDislike, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this), \" Dislike\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconParas, {\n                  onClick: onSave,\n                  iconColor: saved ? '#3b82f6' : color,\n                  children: [/*#__PURE__*/_jsxDEV(MdPlaylistAdd, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 21\n                  }, this), \" \", saved ? 'Saved' : 'Save']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChannelContainer, {\n              children: [/*#__PURE__*/_jsxDEV(ImageEl, {\n                src: channelDataObj.profileImageUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n                children: [/*#__PURE__*/_jsxDEV(ParaEl, {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: channelDataObj.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ParaEl, {\n                  children: channelDataObj.subscriberCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ParaEl, {\n              padding: \"30px\",\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: value => {\n        const {\n          lightTheme\n        } = value;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            lightTheme: lightTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Cont, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), this.renderVideo()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default VideoItemDetails;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/VideoItemDetailsRoute/index.js"],"names":["Component","Cookies","ReactPlayer","AiOutlineLike","AiOutlineDislike","MdPlaylistAdd","Header","Navbar","VideoFrameContainer","VideoContainer","ParaEl","AttributesContainer","ChannelContainer","ImageEl","ContentContainer","IconParas","Cont","ThemeContext","VideoItemDetails","state","videoDetails","liked","disliked","saved","getData","mounted","match","props","params","id","jwtToken","get","url","options","headers","Authorization","method","response","fetch","ok","responseData","json","data","video_details","setState","isDisliked","isLiked","isSaved","renderVideo","channel","videoUrl","title","viewCount","publishedAt","description","values","lightTheme","addSavedVideos","bgColor","color","onSave","video_url","channelDataObj","profileImageUrl","name","subscriberCount","componentDidMount","componentWillUnmount","render","value"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport ReactPlayer from 'react-player'\n\nimport {AiOutlineLike, AiOutlineDislike} from 'react-icons/ai'\nimport {MdPlaylistAdd} from 'react-icons/md'\nimport Header from '../Header'\nimport Navbar from '../Navbar'\n\nimport {\n  VideoFrameContainer,\n  VideoContainer,\n  ParaEl,\n  AttributesContainer,\n  ChannelContainer,\n  ImageEl,\n  ContentContainer,\n  IconParas,\n  Cont,\n} from './styledComponents'\n\nimport ThemeContext from '../../context/ThemeContext'\n\nimport './index.css'\n\nclass VideoItemDetails extends Component {\n  state = {\n    videoDetails: {},\n    liked: false,\n    disliked: false,\n    saved: false,\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  componentWillUnmount() {\n    this.mounted = false\n  }\n\n  getData = async () => {\n    this.mounted = true\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/videos/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const responseData = await response.json()\n      const data = responseData.video_details\n      if (this.mounted) {\n        await this.setState({\n          videoDetails: data,\n        })\n      }\n    }\n  }\n\n  isDisliked = () => {\n    const {liked, disliked} = this.state\n    if (liked) {\n      this.setState({liked: false})\n    }\n    if (disliked) {\n      this.setState({disliked: false})\n    } else {\n      this.setState({disliked: true})\n    }\n  }\n\n  isLiked = () => {\n    const {liked, disliked} = this.state\n    if (disliked) {\n      this.setState({disliked: false})\n    }\n    if (liked) {\n      this.setState({liked: false})\n    } else {\n      this.setState({liked: true})\n    }\n  }\n\n  isSaved = async () => {\n    const {saved} = this.state\n    if (saved) {\n      await this.setState({saved: false})\n    } else {\n      await this.setState({saved: true})\n    }\n  }\n\n  renderVideo = () => {\n    const {videoDetails, liked, disliked, saved} = this.state\n    const {channel} = videoDetails\n    const {videoUrl, title, viewCount, publishedAt, description} = videoDetails\n    return (\n      <ThemeContext.Consumer>\n        {values => {\n          const {lightTheme, addSavedVideos} = values\n          const bgColor = lightTheme ? '#ffffff' : '#000000'\n          const color = lightTheme ? '#000000' : '#ffffff'\n\n          const onSave = () => {\n            this.isSaved()\n            addSavedVideos(videoDetails)\n          }\n\n          return (\n            <VideoContainer bgColor={bgColor} color={color}>\n              <VideoFrameContainer>\n                <ReactPlayer\n                  url={videoDetails.video_url}\n                  controls\n                  className=\"react-player\"\n                />\n                <ParaEl>\n                  <b>{title}</b>\n                </ParaEl>\n              </VideoFrameContainer>\n              <AttributesContainer>\n                <ParaEl>\n                  {viewCount} views . {publishedAt}\n                </ParaEl>\n                <ChannelContainer color={color}>\n                  <IconParas\n                    onClick={this.isLiked}\n                    iconColor={liked ? '#3b82f6' : color}\n                  >\n                    <AiOutlineLike size={20} /> Like\n                  </IconParas>\n                  <IconParas\n                    onClick={this.isDisliked}\n                    iconColor={disliked ? '#3b82f6' : color}\n                  >\n                    <AiOutlineDislike size={20} /> Dislike\n                  </IconParas>\n                  <IconParas\n                    onClick={onSave}\n                    iconColor={saved ? '#3b82f6' : color}\n                  >\n                    <MdPlaylistAdd size={20} /> {saved ? 'Saved' : 'Save'}\n                  </IconParas>\n                </ChannelContainer>\n              </AttributesContainer>\n              <ChannelContainer>\n                <ImageEl src={channelDataObj.profileImageUrl} />\n                <ContentContainer>\n                  <ParaEl>\n                    <b>{channelDataObj.name}</b>\n                  </ParaEl>\n                  <ParaEl>{channelDataObj.subscriberCount}</ParaEl>\n                </ContentContainer>\n              </ChannelContainer>\n              <ParaEl padding=\"30px\">{description}</ParaEl>\n            </VideoContainer>\n          )\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n\n  render() {\n    return (\n      <ThemeContext.Consumer>\n        {value => {\n          const {lightTheme} = value\n          return (\n            <>\n              <Header lightTheme={lightTheme} />\n              <Cont>\n                <Navbar />\n                {this.renderVideo()}\n              </Cont>\n            </>\n          )\n        }}\n      </ThemeContext.Consumer>\n    )\n  }\n}\n\nexport default VideoItemDetails\n"]},"metadata":{},"sourceType":"module"}